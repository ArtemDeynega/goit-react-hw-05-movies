{"version":3,"file":"static/js/trending-lazy.ff7dec0b.chunk.js","mappings":"sOAEaA,E,QAAgBC,EAAAA,GAAH,uE,6ECa1B,EAViB,WACf,IAAMC,ECJ8B,WACpC,OAA4CC,EAAAA,EAAAA,UAAS,MAArD,eAAOD,EAAP,KAAuBE,EAAvB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,8GAESC,EAAAA,EAAAA,MAFT,cAElBC,EAFkB,OAGxBJ,EAAkBI,GAHM,mDAMxBC,QAAQC,IAAR,MANwB,yDAAH,qDASzBJ,MACC,IACIJ,EDXgBS,GACvB,OACE,iCACE,SAACX,EAAD,6BAECE,IAAkB,SAACU,EAAA,GAAD,CAAWC,OAAQX,S,uLEXtCY,EAAQC,EAAAA,MAAAA,QAERC,EACM,gCADNA,EAEC,mCAFDA,EAGE,WAHFA,EAIE,QAJFA,EAKI,SAGJC,EAAWH,EAAMI,OAAO,CAC5BC,QAASH,EACTI,OAAQ,CACNC,QAASL,EACTM,SAAU,WAODf,EAAiB,mCAAG,sGACRU,EAAS,GAAD,OAAID,EAAJ,YAAoBA,EAApB,UADA,uBACvBO,EADuB,EACvBA,KADuB,kBAGxBA,EAAKC,SAHmB,2CAAH,qDAMjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNT,EAAS,GAAD,OAC1BD,EAD0B,YACRA,EADQ,sCACkCU,IAFpC,uBACrBH,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,sDAOfG,EAAe,mCAAG,WAAMC,GAAN,yFACNX,EAAS,GAAD,OAAID,EAAJ,YAAoBY,IADtB,uBACrBL,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAKfM,EAAe,mCAAG,WAAMD,GAAN,yFACNX,EAAS,GAAD,OAAID,EAAJ,YAAoBY,EAApB,aADF,uBACrBL,EADqB,EACrBA,KADqB,kBAGtBA,EAAKO,MAHiB,2CAAH,sDAMfC,EAAe,mCAAG,WAAMH,GAAN,yFACNX,EAAS,GAAD,OAAID,EAAJ,YAAoBY,EAApB,oBADF,uBACrBL,EADqB,EACrBA,KADqB,kBAGtBA,EAAKC,SAHiB,2CAAH,uD,oKCxCfZ,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBmB,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,wBACGpB,EAAOqB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,SAACC,EAAD,WACE,UAAC,KAAD,CAAMC,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA1C,WACE,SAACU,EAAD,UAAQN,KACR,SAACO,EAAD,CACEC,IAAG,0CAAqCP,GACxCQ,IAAI,oBALKV,W,mBCVZQ,EAAM1C,EAAAA,EAAAA,IAAH,yCAGHqC,EAAWrC,EAAAA,EAAAA,GAAH,sEAKRyC,EAAQzC,EAAAA,EAAAA,GAAH","sources":["components/Trending/Trending.styled.jsx","components/Trending/Trending.jsx","hooks/useFetchTrendingMovies.js","service/movieApi.js","view/MovieCard/MovieCard.jsx","view/MovieCard/MovieCard.styled.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const TrendingTitle = styled.h1`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n","import { useFetchTrendingMovies } from 'hooks/useFetchTrendingMovies';\nimport { TrendingTitle } from '.';\n\nimport { MovieCard } from 'view/MovieCard';\n\nconst Trending = () => {\n  const trendingMovies = useFetchTrendingMovies();\n  return (\n    <>\n      <TrendingTitle>Trending today</TrendingTitle>\n\n      {trendingMovies && <MovieCard movies={trendingMovies} />}\n    </>\n  );\n};\nexport default Trending;\n","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'service/movieApi';\nexport const useFetchTrendingMovies = () => {\n  const [trendingMovies, setTrendingMovies] = useState(null);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        const sendTrendingMovies = await getTrendingMovies();\n        setTrendingMovies(sendTrendingMovies);\n        return;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchTrendingMovies();\n  }, []);\n  return trendingMovies;\n};\n","const axios = require('axios').default;\n\nconst SET_URL = {\n  BASE_URL: 'https://api.themoviedb.org/3/',\n  KEY: '6ec0852e53b9bedf7516e9964c7fa3f3',\n  HOME: 'trending',\n  PATH: 'movie',\n  SEARCH: 'search',\n};\n\nconst getMovie = axios.create({\n  baseURL: SET_URL.BASE_URL,\n  params: {\n    api_key: SET_URL.KEY,\n    language: 'en-US',\n  },\n});\n\nexport const fetchImage = filePath => {\n  return `https://image.tmdb.org/t/p/w300/${filePath}`;\n};\nexport const getTrendingMovies = async () => {\n  const { data } = await getMovie(`${SET_URL.HOME}/${SET_URL.PATH}/day?`);\n\n  return data.results;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await getMovie(\n    `${SET_URL.SEARCH}/${SET_URL.PATH}?include_adult=false&query=${query}`\n  );\n\n  return data.results;\n};\nexport const getMovieDetails = async movieId => {\n  const { data } = await getMovie(`${SET_URL.PATH}/${movieId}`);\n  // console.log(data);\n  return data;\n};\nexport const getMovieCredits = async movieId => {\n  const { data } = await getMovie(`${SET_URL.PATH}/${movieId}/credits`);\n  //   console.log(data.cast);\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await getMovie(`${SET_URL.PATH}/${movieId}/reviews?page=1`);\n\n  return data.results;\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { ListItem, Img, Title } from '.';\n\nexport const MovieCard = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, title, poster_path }) => (\n          <ListItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <Title>{title}</Title>\n              <Img\n                src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n                alt=\"poster film\"\n              />\n            </Link>\n          </ListItem>\n        ))}\n      </ul>\n    </>\n  );\n};\nMovieCard.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Img = styled.img`\n  width: 200px;\n`;\nexport const ListItem = styled.li`\n  margin-bottom: 24px;\n  margin-left: 20px;\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 4px;\n`;\n"],"names":["TrendingTitle","styled","trendingMovies","useState","setTrendingMovies","useEffect","fetchTrendingMovies","getTrendingMovies","sendTrendingMovies","console","log","useFetchTrendingMovies","MovieCard","movies","axios","require","SET_URL","getMovie","create","baseURL","params","api_key","language","data","results","getSearchMovies","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","location","useLocation","map","id","title","poster_path","ListItem","to","state","from","Title","Img","src","alt"],"sourceRoot":""}