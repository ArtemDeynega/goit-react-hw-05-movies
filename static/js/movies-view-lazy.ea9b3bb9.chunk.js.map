{"version":3,"file":"static/js/movies-view-lazy.ea9b3bb9.chunk.js","mappings":"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","sources":["components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","components/MoviesView/MoviesView.jsx","service/movieApi.js","view/MovieCard/MovieCard.jsx","view/MovieCard/MovieCard.styled.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  width: 200px;\n  height: 20px;\n  padding: 0.375rem 0.75rem;\n  margin: 0 8px 10px 0;\n  font-family: inherit;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #212529;\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid #bdbdbd;\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  :focus {\n    color: #212529;\n    background-color: #fff;\n    border-color: #bdbdbd;\n    outline: 0;\n    box-shadow: 0 0 0 0.2rem rgba(158, 158, 158, 0.25);\n  }\n  ::placeholder {\n    color: #212529;\n    opacity: 0.4;\n  }\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  justify-content: center;\n`;\nexport const Form = styled.form`\n  margin: 0 auto;\n`;\n","import { BiSearchAlt } from 'react-icons/bi';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { Input, Header, Form } from '.';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [searchValue, setSearchValue] = useState('');\n\n  const handleSubmit = evt => {\n    setSearchValue(evt.target.value);\n  };\n  const hableInputChange = evt => {\n    evt.preventDefault();\n    if (searchValue.trim() === '') {\n      toast.warn(`–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞`);\n      return;\n    }\n    onSubmit(searchValue.trim().toLowerCase());\n    setSearchValue('');\n  };\n\n  return (\n    <>\n      <Header>\n        <Form onSubmit={hableInputChange}>\n          <Input\n            placeholder=\"Search movie\"\n            value={searchValue}\n            onChange={handleSubmit}\n          />\n          <button type=\"submit\">\n            <BiSearchAlt\n              style={{\n                marginRight: 'auto',\n                marginLeft: 'auto',\n                color: 'black',\n              }}\n            />\n          </button>\n        </Form>\n      </Header>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { SearchBar } from 'components/SearchBar';\nimport { Outlet, useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from 'service/movieApi';\nimport { MovieCard } from 'view/MovieCard';\n\nconst MoviesView = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState(null);\n  const [, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams({});\n\n  const getSearchParams = searchParams.get('query') || '';\n\n  const handleQuery = newQuery => {\n    if (searchQuery !== newQuery) {\n      setSearchQuery(newQuery);\n      setSearchParams({ query: newQuery });\n    }\n  };\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n    const fetchMovies = async () => {\n      try {\n        await getSearchMovies(searchQuery).then(data => {\n          if (data.length === 0) {\n            toast.warn(`–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É ${searchQuery} –Ω–µ —á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω üòî`);\n          }\n          if (data.length > 0) {\n            setMovies([...data]);\n          }\n        });\n      } catch (error) {\n        console.log(error);\n        setError(error);\n      }\n    };\n    fetchMovies();\n    setMovies(null);\n  }, [searchQuery]);\n  useEffect(() => {\n    if (!getSearchParams) {\n      return;\n    }\n    const fetchMovies = async () => {\n      try {\n        await getSearchMovies(getSearchParams).then(data => {\n          setMovies([...data]);\n        });\n      } catch (error) {\n        setError(error);\n        console.log(error.message);\n      }\n    };\n    fetchMovies();\n    setMovies(null);\n  }, [getSearchParams]);\n\n  return (\n    <>\n      <SearchBar onSubmit={handleQuery} />\n\n      {movies && <MovieCard movies={movies} />}\n      <Outlet />\n    </>\n  );\n};\nexport default MoviesView;\n","const axios = require('axios').default;\n\nconst SET_URL = {\n  BASE_URL: 'https://api.themoviedb.org/3/',\n  KEY: '6ec0852e53b9bedf7516e9964c7fa3f3',\n  HOME: 'trending',\n  PATH: 'movie',\n  SEARCH: 'search',\n};\n\nconst getMovie = axios.create({\n  baseURL: SET_URL.BASE_URL,\n  params: {\n    api_key: SET_URL.KEY,\n    language: 'en-US',\n  },\n});\n\nexport const fetchImage = filePath => {\n  return `https://image.tmdb.org/t/p/w300/${filePath}`;\n};\nexport const getTrendingMovies = async () => {\n  const { data } = await getMovie(`${SET_URL.HOME}/${SET_URL.PATH}/day?`);\n\n  return data.results;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await getMovie(\n    `${SET_URL.SEARCH}/${SET_URL.PATH}?include_adult=false&query=${query}`\n  );\n\n  return data.results;\n};\nexport const getMovieDetails = async movieId => {\n  const { data } = await getMovie(`${SET_URL.PATH}/${movieId}`);\n  // console.log(data);\n  return data;\n};\nexport const getMovieCredits = async movieId => {\n  const { data } = await getMovie(`${SET_URL.PATH}/${movieId}/credits`);\n  //   console.log(data.cast);\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await getMovie(`${SET_URL.PATH}/${movieId}/reviews?page=1`);\n\n  return data.results;\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { ListItem, Img, Title } from '.';\n\nexport const MovieCard = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, title, poster_path }) => (\n          <ListItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <Title>{title}</Title>\n              <Img\n                src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n                alt=\"poster film\"\n              />\n            </Link>\n          </ListItem>\n        ))}\n      </ul>\n    </>\n  );\n};\nMovieCard.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Img = styled.img`\n  width: 200px;\n`;\nexport const ListItem = styled.li`\n  margin-bottom: 24px;\n  margin-left: 20px;\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 4px;\n`;\n"],"names":["Input","styled","Header","Form","SearchBar","onSubmit","useState","searchValue","setSearchValue","evt","preventDefault","trim","toLowerCase","toast","placeholder","value","onChange","target","type","style","marginRight","marginLeft","color","searchQuery","setSearchQuery","movies","setMovies","setError","useSearchParams","searchParams","setSearchParams","getSearchParams","get","useEffect","fetchMovies","getSearchMovies","then","data","length","console","log","message","newQuery","query","MovieCard","axios","require","SET_URL","getMovie","create","baseURL","params","api_key","language","getTrendingMovies","results","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","location","useLocation","map","id","title","poster_path","ListItem","to","state","from","Title","Img","src","alt"],"sourceRoot":""}