{"version":3,"file":"static/js/movies-view-lazy.75266d7b.chunk.js","mappings":"oRAEaA,EAAQC,EAAAA,EAAAA,MAAH,soBA4BLC,EAASD,EAAAA,EAAAA,OAAH,sEAINE,EAAOF,EAAAA,EAAAA,KAAH,2C,kBC7BJG,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAeA,OACE,+BACE,SAACN,EAAD,WACE,UAACC,EAAD,CAAME,SAba,SAAAI,GACvBA,EAAIC,iBACuB,KAAvBH,EAAYI,QAIhBN,EAASE,EAAYI,OAAOC,eAC5BJ,EAAe,KAJbK,EAAAA,GAAAA,KAAA,sIAUE,WACE,SAACb,EAAD,CACEc,YAAY,eACZC,MAAOR,EACPS,SApBW,SAAAP,GACnBD,EAAeC,EAAIQ,OAAOF,WAqBpB,mBAAQG,KAAK,SAAb,UACE,SAAC,MAAD,CACEC,MAAO,CACLC,YAAa,OACbC,WAAY,OACZC,MAAO,qB,8BCcvB,EAzCmB,WACjB,OAAsChB,EAAAA,EAAAA,UAAS,IAA/C,eAAOiB,EAAP,KAAoBC,EAApB,KACA,GAA4BlB,EAAAA,EAAAA,UAAS,MAArC,eAAOmB,EAAP,KAAeC,EAAf,KACA,GAAqBpB,EAAAA,EAAAA,UAAS,MAArBqB,GAAT,eA6BA,OAvBAC,EAAAA,EAAAA,YAAU,WACR,GAAoB,KAAhBL,EAAJ,CAGA,IAAMM,EAAW,mCAAG,wGAEVC,EAAAA,EAAAA,IAAgBP,GAAaQ,MAAK,SAAAC,GAClB,IAAhBA,EAAKC,QACPpB,EAAAA,GAAAA,KAAA,uGAAgCU,EAAhC,0GAEES,EAAKC,OAAS,GAChBP,GAAU,OAAIM,OAPF,sDAWhBE,QAAQC,IAAR,MACAR,EAAS,EAAD,IAZQ,wDAAH,qDAejBE,IACAH,EAAU,SACT,CAACH,KAGF,iCACE,SAACnB,EAAD,CAAWC,SA9BK,SAAA+B,GACdb,IAAgBa,GAClBZ,EAAeY,MA8BdX,IAAU,SAACY,EAAA,GAAD,CAAWZ,OAAQA,KAC9B,SAAC,KAAD,S,qKCxCOY,EAAY,SAAC,GAAgB,IAAdZ,EAAa,EAAbA,OACpBa,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,wBACGd,EAAOe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,SAACC,EAAD,WACE,UAAC,KAAD,CAAMC,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA1C,WACE,SAACU,EAAD,UAAQN,KACR,SAACO,EAAD,CACEC,IAAG,0CAAqCP,GACxCQ,IAAI,oBALKV,W,mBCVZQ,EAAMhD,EAAAA,EAAAA,IAAH,yCAGH2C,EAAW3C,EAAAA,EAAAA,GAAH,sEAKR+C,EAAQ/C,EAAAA,EAAAA,GAAH","sources":["components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","components/MoviesView/MoviesView.jsx","view/MovieCard/MovieCard.jsx","view/MovieCard/MovieCard.styled.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  width: 200px;\n  height: 20px;\n  padding: 0.375rem 0.75rem;\n  margin: 0 8px 10px 0;\n  font-family: inherit;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #212529;\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid #bdbdbd;\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  :focus {\n    color: #212529;\n    background-color: #fff;\n    border-color: #bdbdbd;\n    outline: 0;\n    box-shadow: 0 0 0 0.2rem rgba(158, 158, 158, 0.25);\n  }\n  ::placeholder {\n    color: #212529;\n    opacity: 0.4;\n  }\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  justify-content: center;\n`;\nexport const Form = styled.form`\n  margin: 0 auto;\n`;\n","import { BiSearchAlt } from 'react-icons/bi';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { Input, Header, Form } from '.';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [searchValue, setSearchValue] = useState('');\n\n  const handleSubmit = evt => {\n    setSearchValue(evt.target.value);\n  };\n  const hableInputChange = evt => {\n    evt.preventDefault();\n    if (searchValue.trim() === '') {\n      toast.warn(`–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞`);\n      return;\n    }\n    onSubmit(searchValue.trim().toLowerCase());\n    setSearchValue('');\n  };\n\n  return (\n    <>\n      <Header>\n        <Form onSubmit={hableInputChange}>\n          <Input\n            placeholder=\"Search movie\"\n            value={searchValue}\n            onChange={handleSubmit}\n          />\n          <button type=\"submit\">\n            <BiSearchAlt\n              style={{\n                marginRight: 'auto',\n                marginLeft: 'auto',\n                color: 'black',\n              }}\n            />\n          </button>\n        </Form>\n      </Header>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { SearchBar } from 'components/SearchBar';\nimport { Outlet } from 'react-router-dom';\nimport { getSearchMovies } from 'service/movieApi';\nimport { MovieCard } from 'view/MovieCard';\n\nconst MoviesView = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState(null);\n  const [, setError] = useState(null);\n  const handleQuery = newQuery => {\n    if (searchQuery !== newQuery) {\n      setSearchQuery(newQuery);\n    }\n  };\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n    const fetchMovies = async () => {\n      try {\n        await getSearchMovies(searchQuery).then(data => {\n          if (data.length === 0) {\n            toast.warn(`–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É ${searchQuery} –Ω–µ —á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω üòî`);\n          }\n          if (data.length > 0) {\n            setMovies([...data]);\n          }\n        });\n      } catch (error) {\n        console.log(error);\n        setError(error);\n      }\n    };\n    fetchMovies();\n    setMovies(null);\n  }, [searchQuery]);\n\n  return (\n    <>\n      <SearchBar onSubmit={handleQuery} />\n\n      {movies && <MovieCard movies={movies} />}\n      <Outlet />\n    </>\n  );\n};\nexport default MoviesView;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { ListItem, Img, Title } from '.';\n\nexport const MovieCard = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, title, poster_path }) => (\n          <ListItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <Title>{title}</Title>\n              <Img\n                src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n                alt=\"poster film\"\n              />\n            </Link>\n          </ListItem>\n        ))}\n      </ul>\n    </>\n  );\n};\nMovieCard.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Img = styled.img`\n  width: 200px;\n`;\nexport const ListItem = styled.li`\n  margin-bottom: 24px;\n  margin-left: 20px;\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 4px;\n`;\n"],"names":["Input","styled","Header","Form","SearchBar","onSubmit","useState","searchValue","setSearchValue","evt","preventDefault","trim","toLowerCase","toast","placeholder","value","onChange","target","type","style","marginRight","marginLeft","color","searchQuery","setSearchQuery","movies","setMovies","setError","useEffect","fetchMovies","getSearchMovies","then","data","length","console","log","newQuery","MovieCard","location","useLocation","map","id","title","poster_path","ListItem","to","state","from","Title","Img","src","alt"],"sourceRoot":""}